<!DOCTYPE html>
<html lang="en">
<head>
  <title>DFCC Chat Bot</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js" integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy" crossorigin="anonymous"></script>
<style>
  .user-message {
    background-color: #A90e09;
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 10px;
    color: #fff;
    display: flex;
    /* align-items: center; */
  }
  .bot-message {
    background-color: #312e2e;
    padding: 10px;
    border-radius: 5px;
    white-space: pre-line;
    margin-bottom: 10px;
    color: #fff;
    display: flex;
    /* align-items: center; */
  }
  .background {
    background: radial-gradient(circle, #f35c57, #A90e09);
  }
  #response {
    width: 100%;
    padding: 25px;
    background-color: #fff;
    border-radius: 25px;
    height: 320px;
    overflow: auto;
  }
  .message-image {
    width: 40px;
    height: 40px;
    margin-right: 10px;
    margin-top: 10px;
    border-radius: 50%;
  }
</style>
</head>
<body class="background">
<div class="container my-5">
  <h1 class="text-center text-white">DFCC Chat Bot</h1>

  <div id="response" class="mt-5"></div>
  <form id="questionForm">
    <input class="form-control mt-4" style="border-radius: 25px;" id="question" name="question" required rows="4"></input>
    <div class="mt-4 text-center"><button type="submit" class="btn btn-light btn-lg">Submit</button></div>
  </form>
</div>
 

<script>
  // Initialize the chat history variable
  let chatHistory = [];

  // Function to append a message to the response div
  function appendMessageToResponse(role, content) {
    const responseDiv = document.getElementById("response");
    const messageDiv = document.createElement("div");
    messageDiv.classList.add(role === 'user' ? "user-message" : "bot-message");

    // Create an image element for the message
    const image = document.createElement("img");
    image.classList.add("message-image");
    image.src = role === 'user' ? "/man.png" : "/robot.png"; // Replace with actual image URLs

    // Use innerHTML to allow HTML formatting in the message
    messageDiv.innerHTML = `<div>${content}</div>`;
    messageDiv.prepend(image);

    responseDiv.appendChild(messageDiv);
  }

  document.getElementById("questionForm").addEventListener("submit", async function (event) {
    event.preventDefault();
    const questionInput = document.getElementById("question");
    const question = questionInput.value;
    document.getElementById("question").value = "";    


    try {
      // Add the user's question to the chat history
      chatHistory.push({ role: 'user', content: question });

      // Display the user's message immediately
      appendMessageToResponse('user', question);

      const requestBody = {
        messages: chatHistory
      };

      const response = await fetch("/api/chat-response", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(requestBody),
      });

      const data = await response.json();

      // Update the chat history for future interactions
      chatHistory = data.chatHistory || [];
      console.log(chatHistory);

      // Display the bot's response in HTML format
      appendMessageToResponse('bot', data.answer);

      // Clear the question input
      questionInput.value = '';

    } catch (error) {
      console.error("Error submitting question:", error);
      const responseDiv = document.getElementById("response");
      responseDiv.innerHTML = "<p>An error occurred.</p>";
    }
  });
</script>
</body>
</html>
